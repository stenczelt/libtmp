name: Build Libtorch Shared Library

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04, macos-14 ]
        arch: [ x86_64 ] # Only Ubuntu x86_64, MacOS ARM64
        cuda: [ cpu ] # Default for macOS
        libtorch_version: [ "2.6.0", "2.4.1" ]
        include:
          # Libtorch 2.6.0
          - os: ubuntu-22.04
            arch: x86_64
            cuda: cuda11
            cuda_version: "11.8.0"
            libtorch_version: "2.6.0"
          - os: ubuntu-22.04
            arch: x86_64
            cuda: cuda12
            cuda_version: "12.4.0"
            libtorch_version: "2.6.0"
          - os: ubuntu-22.04
            arch: x86_64
            cuda: cuda12
            cuda_version: "12.6.0"
            libtorch_version: "2.6.0"

          # Libtorch 2.4.1
          - os: ubuntu-22.04
            arch: x86_64
            cuda: cuda11
            cuda_version: "11.8.0"
            libtorch_version: "2.4.1"
          - os: ubuntu-22.04
            arch: x86_64
            cuda: cuda12
            cuda_version: "12.1.0"
            libtorch_version: "2.4.1"
          - os: ubuntu-22.04
            arch: x86_64
            cuda: cuda12
            cuda_version: "12.4.0"
            libtorch_version: "2.4.1"

          # MacOS arm64 (only CPU)
          - os: macos-14
            arch: arm64
            cuda: cpu
            libtorch_version: "2.6.0"
          - os: macos-14
            arch: arm64
            cuda: cpu
            libtorch_version: "2.4.1"

        exclude:
          - os: macos-14
            arch: x86_64 # No MacOS x86_64 builds




    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up build environment
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "CUDA=${{ matrix.cuda }}" >> $GITHUB_ENV
          echo "LIBTORCH_VERSION=${{ matrix.libtorch_version }}" >> $GITHUB_ENV

      - name: Construct filename
        run: |
          FILENAME="mylib-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.cuda }}-libtorch${{ matrix.libtorch_version }}.tar.gz"
          echo "TAR_FILENAME=$FILENAME" >> $GITHUB_ENV
          echo "Generated filename: $FILENAME"

      - name: Install dependencies
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-22.04" ]]; then
            sudo apt update && sudo apt install -y build-essential cmake
          fi

      - name: Download libtorch
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-22.04" ]]; then
            if [[ "${{ matrix.cuda }}" == "cuda11" ]]; then
              LIBTORCH_CUDA="cu118"
            elif [[ "${{ matrix.cuda }}" == "cuda12" ]]; then
              LIBTORCH_CUDA="cu126"
            else
              LIBTORCH_CUDA="cpu"
            fi
            LIBTORCH_URL="https://download.pytorch.org/libtorch/${LIBTORCH_CUDA}/libtorch-cxx11-abi-shared-with-deps-${{ matrix.libtorch_version }}%2B${LIBTORCH_CUDA}.zip"
          elif [[ "${{ matrix.os }}" == "macos-14" ]]; then
            LIBTORCH_URL="https://download.pytorch.org/libtorch/cpu/libtorch-macos-arm64-${{ matrix.libtorch_version }}.zip"
          fi

          echo "Downloading libtorch from $LIBTORCH_URL"
          wget -O libtorch.zip "$LIBTORCH_URL"
          unzip libtorch.zip


      - name: Build shared library
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_PREFIX_PATH=$(pwd)/../libtorch ..
          make -j$(nproc)

      - name: Package artifacts
        run: |
          tar -czvf ${{ env.TAR_FILENAME }} -C build .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TAR_FILENAME }}
          path: ${{ env.TAR_FILENAME }}
